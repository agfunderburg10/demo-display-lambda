AWSTemplateFormatVersion: 2010-09-09
Description: |-
  Demo Service Group Core Stack

  This stack holds core resources used by the "demo" service group

# To update this stack
# aws cloudformation deploy --stack-name group-demo-core --template-file management/aws.cfn.group-demo-core.yaml --capabilities CAPABILITY_NAMED_IAM --tags service-group=demo

Parameters:

  # static parameters
  ServiceGroup:
    Type: String
    Default: demo

Resources:
  LambdaSAMDeploymentIamManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow SAM deployment of lambdas
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # give deployment user cloudformation read access
          - Effect: Allow
            Action:
              - cloudformation:Describe*
              - cloudformation:Get*
              - cloudformation:List*
              - cloudformation:CreateChangeSet
              - cloudformation:ValidateTemplate
            Resource:
              - "*"
          # give deployment user access to CRUD stacks
          - Effect: Allow
            Action:
              - cloudformation:*
            Resource:
              - !Sub arn:aws:cloudformation:*:${AWS::AccountId}:stack/${ServiceGroup}*
          # give deployment user access to read cloudwatch metrics
          - Effect: Allow
            Action:
              - cloudwatch:ListMetrics
              - cloudwatch:GetMetricData
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:*
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:*:*${ServiceGroup}*"
          # give deployment user access to create events to trigger lambdas
          - Effect: Allow
            Action:
              - events:*
            Resource:
              - !Sub arn:aws:events:*:*:rule/${ServiceGroup}*
          # give deployment user full access to CRUD lambdas
          - Effect: Allow
            Action:
              - lambda:*
            Resource:
              - !Sub arn:aws:lambda:*:${AWS::AccountId}:function:${ServiceGroup}*
              - !Sub arn:aws:lambda:*:${AWS::AccountId}:layer:${ServiceGroup}*
          # give deployment user full access to CRUD api gateway resources
          - Effect: Allow
            Action:
              - apigateway:GET
              - apigateway:POST
              - apigateway:PATCH
              - apigateway:PUT
              - apigateway:DELETE
            Resource:
              - "*"
          # give deployment user full access to CRUD api gateway resources
          - Effect: Allow
            Action:
              - apigateway:*
            Resource:
              - !Sub arn:aws:apigateway:*::/apis/${ServiceGroup}*
              - !Sub arn:aws:apigateway:*::/restapis/${ServiceGroup}*
          # give deployment user full access to CRUD logs and log groups
          - Effect: Allow
            Action:
              - logs:*
            Resource:
              - !Sub arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/${ServiceGroup}*
          # give deployment user access to the SAM bucket
          - Effect: Allow
            Action:
              - s3:List*
              - s3:Describe*
              - s3:PutObject
              - s3:GetObject
              - s3:CreateMultipartUpload
            Resource:
              - arn:aws:s3:::aws-sam-cli-managed-default*
              - !Sub arn:aws:s3:::aws-sam-cli-managed-default*/${ServiceGroup}*
          - Effect: Allow
            Action: 
              - iam:PassRole
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/${ServiceGroup}*"
          

  DeploymentGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${ServiceGroup}-deployment-group
      ManagedPolicyArns:
        - !Ref LambdaSAMDeploymentIamManagedPolicy

  DeploymentUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${ServiceGroup}-deployment-user
      Groups:
        - !Ref DeploymentGroup
